swagger: "2.0"
info:
  version: 1.0.0
  title: Shipnow API
  description: |
    ShipNow exposes it's information using RESTful interface. Detailed
    documentation of every endpoint is available below.

    Requests
    --------

     * Our production API is hosted at https://api.shipnow.com.ar.
     * Our testing API is hosted at https://api-staging.shipnow.com.ar.

    If you need to test your clients, feel free to pollute the testing API with
    test data, though keep in mind that it will be cleared every few hours.

    On occasions, testing may diverge slightly from production. This should not
    last long, since we generally deploy to one and quickly to the other. If you
    find such discrepancies, don't worry, since they should quickly propagate to
    production.

    Both APIs use HTTPS (ie: HTTP + TLS) exclusively. You MUST NOT attempt to reach
    them using raw HTTP.

    ### Authentication

    Authentication is not yet done via OAuth, but a simpler password-based
    mechanism.

    Users will provide their username and password, which you will then exchange
    for a `Token` by `POST`ing to `/users/authentication`, using HTTP Basic
    Authentication (as defined in [rfc2617][rfc2617]). This will return the entire
    user object, which contains the user's token:

        {
            "id": 1,
            "email": "hugo@barrera.io",
            "token": "VXyuYdTflB9NY1KUMfcddDcAJeye4vfAv7cZg8m7qDNmhuZ3V6",
            "type": "human",
            "description": "Hugo",
            "role": "admin",
            "account": {},
            "avatar_url": null
        }

    This token should be included in every request header to operate on behalf of
    the user, inside the `Authorization` header, as follows:

        Token token=gNGQNzZ2muAdRKZT3miNccnwYxSrZ6zl2t1B6l6tcHpUw00pok

    You SHOULD NOT store user's username or password. You should only store the
    provided token.

    Responses
    ---------

    ### Data

    All data is sent and received using [JSON][json]. Request data will be
    contained inside a `results` object:

        {
            "results": [
               {
                  "id": 1,
                  "name": "sample object 1",
                  "created_at": "2017-12-14T15:42:12.898Z"
               }
            ]
        }

    All models also contain `updated_at` and `created_at` fields (these are
    ommited from most examples for readability). They are the last-update and
    creation times respectively  and cannot be manually edited.

    ### Errors

    In case of a 4XX (except 422) or 5XX status code, errors MAY be included in
    an errors array:

        {
            "errors": [
                "Access Denied"
            ]
        }

    In case of a 422 status code, validation errors will be included in an
    errors object:

        {
            errors: {
                "someField": "Description of someField's error",
                "anotherField": "Cannot be blank"
            }
        }

    We adhere quite closely to [HTTP 1.1][http1.1], with one exception: When data
    validation fails, we will return a 422 status code.

    All dates are use the [ISO8601][iso8601] format, and are UTC-time, unless
    otherwise specified.

    ### Pagination

    By default, all endpoints will return at most the first twenty elements
    inside the `results` array. To obtain other elements include the `page`
    query parameter, eg:

        https://api.shipnow.com.ar/orders?page=2

    The link to the next and last pages can be found in the `Link` HTTP header:

        <https://api-staging.shipnow.com.ar/orders?page=20>; rel="last", <https://api-staging.shipnow.com.ar/orders?page=2>; rel="next"

    Page indexes are one-based, meaning that the first pages is one, and NOT
    zero.

    Accounts vs Users
    -----------------

    Each client has a single account, which in turn, has multiple users. An account
    will hold all orders and products for that client, which all users of that
    account can access (with different roles).

    Each account can have as many users as they need.  Additional users can be
    created via the API or the sellers interface.

    Roles
    -----

    Users can have one of three roles:

     * ShipNow: These are internal account, that can access data for all clients,
       and are used internally when actually moving products around.
       You will generally never see these user types unless you're deploying
       the ShipNow app for your own warehouse.
     * Administrator: These are the top-level users for each account, and can
       create other users, as well as a few more special actions.
     * Regular: These are the lower-level users, which can create/edit orders,
       product, and use other day-to-day interfaces.

    Bots, or automated automated integrations interacting with the API should
    generally have their own user, and it's recommended that their role is set
    to `regular`.

    Stores
    ------

    Each account can have multiple stores. Stores represent different points of
    sales (eg: MercadoLibre, TiendaNube, eBay, retail, etc).

    If you link shipnow to one of our integrated stores via the web ui, a new
    store will be created for each one. The `store_type` field should help
    reveal which integration that is.

    A single account may also have more than one store for the same store type
    (eg: a single account can be linked to two MercadoLibre profiles).

    If your intention is to read order data from ShipNow, you generally won't
    pay much attention to stores. If your intention is to create orders, you'll
    probably want to use the store type "custom".

    You can create as many stores as you need, and it's strongly recommended
    that you use one per application you're integrating, or per point of sales.

    Order Statuses
    --------------

    Each order has a status indicating at which point in the delivery process
    it's currently in. Below is a brief summary of each status, and which
    transitions sellers may perform for each one.

    Be careful not to confuse `status` with `state`. The latter refers to the
    geopolitical subdivision, not to an order's state.

    ### awaiting_payment
    Indicates that the seller has not yet confirmed that it has been paid. 
    Orders in this status will not be process, and will remain unaltered 
    until the status is updated.

    Valid transitions: `new`, `on_hold`, `cancelled`

    ### new
    This is the initial status for all paid orders. Orders in this status are ready to be allocated. This status should be temporary. If we have stock for all their items, it will be updated automatically to `ready_to_pick`. If not, the order will be paused (`on_hold`).

    Valid transitions: `ready_to_pick`, `on_hold`

    ### ready_to_pick
    Orders with this status are allocated and awaiting to be picked from the warehouse.

    Valid transitions: `picking_list`, `on_hold`

    ### picking_list
    Items for this order and in the process of being gathered around the
    warehouse.

    Valid transitions: `packing_slip`

    ### packing_slip
    Items for this order are being packaged and labeled for delivery.

    Valid transitions: `ready_to_ship`

    ### ready_to_ship
    The package for this order is ready, and is awaiting delivery by the
    courier.

    Valid transitions: `shipped`, `delivered`, `on_hold`

    ### shipped
    The package has been picked up by the courier and is en route to its final
    destination.

    Valid transitions: `delivered`, `not_delivered`

    ### delivered
    The package has been delivered to the buyer successfully. Orders in this
    status may not transition to other statuses.

    ### not_delivered
    Delivery of the package failed (eg: inexistant address, rejected, etc).
    Orders in this status may not transition to other statuses.

    ### on_hold
    The order has been paused, and no further processing will occur
    until it transitions out of this state. If a package exists for an order in
    this state, it will be located and set aside.

    When an order transititions into this state, manual intervention MAY be
    required, and, in some cases, it may not be possible to action the request
    (eg: a package may be given to the courier just as the request comes in,
    etc).

    Valid transitions: `new`, `cancelled`

    ### cancelled
    The order has been cancelled, and will no longer be processed. Orders in
    this status may not transition to other statuses.

    Updating orders
    ---------------

    Depending on an order's status, some fields may not be editable, eg:it's
    impossible to change the destination address for a package that's already
    been shipped.

    The `store_id` field cannot be edited and is considered readonly after an
    order creation.

    Keep in mind that you can set an order's status to `on_hold` (unless it has
    been shipped) if there's an exceptional scenario that requires edition of
    otherwise non-editable fields.

    The following is a brief overview of which fields can be edited for orders
    in each status:

    `awaiting_payment`, `ready_to_pick` or `on_hold`:
    All fields may be edited.

    `picking_list`:
    The `items` field can no longer be edited at this point. All other fields
    are still editable.

    `packing_slip`, `ready_to_ship`, `shipped`, `delivered` `not_delivered` or `cancelled`:
    Only the `comments` field is editable at this point.

    Shipping Services
    -----------------

    Shipnow works with several carriers that offer several shipping services.
    Generally, if you don't specify a carrier/service for an order, we will
    automatically select the best choice for new.

    That said, if you need to work with a specific service/carrier, you may
    select one. Each shipping service has a `type` field which indicates what
    type of service this is. These are described below.

    Keep in mind that when specifying a post office (either as source or
    destination), you do not need to specify an address; we'll automatically
    fill that in.

    ### ship_pas

    Door to PostOffice shipments. These require a valid origin address and a
    valid destination `post_office_id`.

    ### ship_sap

    PostOffice to Door shipments. These require a valid destination address and
    a valid origin `post_office_id`.

    ### pickup

    This isn't an actualy shipping service; just the packaging. Clients will
    pick up the order (either at shipnow, or somewhere else, depending on the
    specific service).

    ### ship_pap

    Door to Door shipments. These require both valid origin and destination
    addresses.

    ### ship_sas

    Post Office to Post Office shipments. These require both a valid origin and
    destination `post_office_id`.

    ### marketplace

    These shipping services are specific to a certain marketplace, and should
    not be used explicitly.

    Webhooks
    --------

    You can receive notifications in your app when certain event occur. For now,
    the only available notification is order creation/update.

    Notifications are delivered via webhooks, which are created by POSTing to
    the /webhooks endpoint documented below.

    Webhook notifications will be delivered by `POST`ing data about the event
    with the following format:

        {
          "account": 1,
          "topic": "order/created",
          "resource_id": 1
        }

     * `account` is the account for which this notification applies.  This will
        only be relevant to you if your application handles multiple ShipNow
        accounts.
     * `topic` describes the event, and is composed of `model/event`. `event`
       can be either `created` or `updated`, and model can only be `order`
       (This WILL change in future, so integrations MUST NOT assume it's always
       `order`!
     * `resources_id` is the `id` of the model which fired this notification
       (eg: the id of the order that has been created).

    Contributing
    ------------

    This documentation is hosted publicly at [GitHub][github].  If you find any
    error or room for improvement, feel free to send a contribution.

    If you encounter any undocumented behaviours, or bugs in the API, please open an
    issue in this project's issue tracker. We'll update the documentation (or fix
    the underlying issue).

    Copyright (c) 2016 ShipNow SRL <developers@shipnow.com.ar>

    [json]: http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf
    [http1.1]: https://tools.ietf.org/html/rfc2616
    [github]: https://github.com/shipnow/docs
    [rfc2617]: https://tools.ietf.org/html/rfc2617#section-2
    [iso8601]: https://en.wikipedia.org/wiki/ISO_8601
  contact:
    name: ShipNow API Team
    email: developers@shipnow.com.ar
    url: https://www.shipnow.com.ar
host: api-staging.shipnow.com.ar
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
security:
  - token: []
paths:
  /orders:
    get:
      description: |
        Returns all orders from the system to which the user has access. This
        will generally be all the orders for the account related to the current
        user.
      operationId: findOrders
      parameters:
        - name: status
          in: query
          description: filter by status
          required: false
          type: string
        - name: date_from
          in: query
          description: exclude orders created before this date
          required: false
          type: string
          format: date
        - name: date_to
          in: query
          description: exclude orders created after this date
          required: false
          type: string
          format: date
        - name: status_detail
          in: query
          description: filter by status_detail
          required: false
          type: string
          format: string
        - name: external_reference
          in: query
          description: find order with this external_reference
          required: false
          type: string
          format: string
        - name: carrier_code
          in: query
          description: filter by carrier_code
          required: false
          type: string
          format: string
        - name: store_id
          in: query
          description: filter by store
          required: false
          type: integer
          format: int32
        - name: sku
          in: query
          description: filter orders with the product with this sku
          required: false
          type: string
          format: string
        - name: tracking_number
          in: query
          description: find order with this tracking_number
          required: false
          type: string
          format: string
      responses:
        200:
          description: An array of Orders.
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/Order'
          examples:
            application/json:
              results:
                - id: 18424
                  external_reference: 100553245
                  comment: Stock comes in on 2016-02-28
                  ship_to:
                    name: John
                    last_name: Doe
                    phone: +54 11 5555 6666
                    zip_code: 2085
                    address_line: Fake Street 123 4A
                    street_name: Fake Street
                    street_number: 123
                    unit: A
                    floor: 4
                    city: CABA
                    state: Argentina
                    email: johndoe@example.com
                  shipping_option:
                    service_code: oca_pap_estandar
                    carrier_code: oca
                  store_id: 2
                  store_type: meli
                  status: delivered
                  items:
                    - id: 2827
                      external_reference: 70089453/A
                      quantity: 2
                      unit_price: 170.0
                      title: Blue Shoes
                      image_url: https://cdn.shipnow.com.ar/items/2827.png
    post:
      description: |
        Creates a new order, and returns it with its new id.
      operationId: createOrder
      parameters:
        - $ref: '#/parameters/NewOrder'
      responses:
        200:
          description: The newly created Order.
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 18424
              external_reference: 100553245
              comment: Stock comes in on 2016-02-28
              ship_to:
                name: John
                last_name: Doe
                phone: +54 11 5555 6666
                zip_code: 2085
                address_line: Fake Street 123 4A
                street_name: Fake Street
                street_number: 123
                unit: A
                floor: 4
                city: CABA
                state: Argentina
                email: johndoe@example.com
              shipping_option:
                service_code: oca_pap_estandar
                carrier_code: oca
              store_id: 2
              store_type: meli
              status: delivered
              items:
                - id: 2827
                  external_reference: 70089453/A
                  quantity: 2
                  unit_price: 170.0
                  title: Blue Shoes
                  image_url: https://cdn.shipnow.com.ar/items/2827.png
        422:
          description: A list of validation errors.
          examples:
            application/json:
              errors:
                external_reference: Has already been taken
                store_id: Cannot be null
  /orders/{id}:
    get:
      description: |
        Returns an order identified by id.
      operationId: getOrder
      parameters:
        - name: id
          in: path
          description: id of order to fetch
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: An Order.
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 18424
              external_reference: 100553245
              comment: Stock comes in on 2016-02-28
              ship_to:
                name: John
                last_name: Doe
                phone: +54 11 5555 6666
                zip_code: 2085
                address_line: Fake Street 123 4A
                street_name: Fake Street
                street_number: 123
                unit: A
                floor: 4
                city: CABA
                state: Argentina
                email: johndoe@example.com
              shipping_option:
                service_code: oca_pap_estandar
                carrier_code: oca
              store_id: 2
              store_type: meli
              status: delivered
              items:
                - id: 2827
                  external_reference: 70089453/A
                  quantity: 2
                  unit_price: 170.0
                  title: Blue Shoes
                  image_url: https://cdn.shipnow.com.ar/items/2827.png
        404:
          description: Order with given id not found.
    put:
      description: |
        Update an existing order. Note that not all fields are editable at all
        times. Once orders have been packed, items and shipping data cannot be
        altered. Only certain status transitions are valid.
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          description: The id of the order to be updated.
          required: true
          type: integer
        - name: order
          in: body
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        200:
          description: The updated order.
          schema:
            $ref: '#/definitions/Order'
          examples:
            application/json:
              id: 18424
              external_reference: 100553245
              comment: Stock comes in on 2016-02-28
              ship_to:
                name: John
                last_name: Doe
                phone: +54 11 5555 6666
                zip_code: 2085
                address_line: Fake Street 123 4A
                street_name: Fake Street
                street_number: 123
                unit: A
                floor: 4
                city: CABA
                state: Argentina
                email: johndoe@example.com
              shipping_option:
                service_code: oca_pap_estandar
                carrier_code: oca
              store_id: 2
              store_type: meli
              status: delivered
              items:
                - id: 2827
                  external_reference: 70089453/A
                  quantity: 2
                  unit_price: 170.0
                  title: Blue Shoes
                  image_url: https://cdn.shipnow.com.ar/items/2827.png
  /orders/{orderId}/shipments:
    get:
      description: |
        Returns the shipment for this order. Older orders MAY have more than
        one shipment if they were returned.
      operationId: findShipments
      parameters:
        - name: orderId
          in: path
          description: The id of the order for which this shipment applies.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: An array of shipments
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/Shipment'
          examples:
            application/json:
              results:
                - id: 6662
                  order_id: 37201
                  speed_shipping: null
                  speed_handling: null
                  estimated_handling: null
                  estimated_delivery: null
                  shipping_price: 30.0
                  insurance_price: 5.0
                  tracking_number: "38007500000015676447"
                  external_reference: 2107694F
                  shipped_at: 2015-12-21T03:00:00.000Z
                  delivered_at: 2015-12-15T03:00:00.000Z
                  prepared_at: null
                  last_mile_at: null
                  not_delivered_at: null
                  carrier_code: integral
                  service_code: integral_48
                  type: PAP
        404:
          description: Order with given orderId not found.
  /products:
    get:
      description: |
        Returns all the products to which the user has access.
      operationId: findProducts
      parameters:
        - name: external_reference
          in: query
          description: Filter by this external_reference.
          required: false
          type: string
      responses:
        200:
          description: A list of zero or more products.
          schema:
            type: object
            properties:
              results:
                  type: array
                  items:
                    $ref: '#/definitions/Product'
          examples:
            application/json:
              results:
                - id: 12072
                  external_reference: AC17283DFC
                  title: Red Scarf
                  stock:
                    available: 1
                    committed: 0
                    allocated: 1
                    on_hand: 2
                  price:
                    retail: 345.0
                    wholesale: 300.5
                    buy: 500
                  currency: ARS
                  image_url: https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png
                  dimensions:
                    weight: 300.0
                    heigth: 20.0
                    length: 20.0
                    width: 20.0
                  extra_data:
                    publication_id: FD742
                  location: null

    post:
      description: |
        Creates a new product, and returns it with its new id.
      operationId: createProduct
      parameters:
        - $ref: '#/parameters/Product'
      responses:
        200:
          description: The newly created product
          schema:
            $ref: '#/definitions/Product'
          examples:
            application/json:
              id: 12072
              external_reference: AC17283DFC
              title: Red Scarf
              price:
                retail: 345.0
                wholesale: 300.5
                buy: 500
              currency: ARS
              image_url: https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png
              dimensions:
                weight: 300.0
                heigth: 20.0
                length: 20.0
                width: 20.0
              extra_data:
                publication_id: FD742
              location: null
        422:
          description: A list of validation errors.
          examples:
            application/json:
              errors:
                external_reference: Has already been taken
  /products/{id}/:
    get:
      description: |
        Returns a product identified by id.
      operationId: getProduct
      parameters:
        - name: id
          in: path
          description: The id of the product to fetch.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A product.
          schema:
            $ref: '#/definitions/Product'
          examples:
            application/json:
              id: 12072
              external_reference: AC17283DFC
              title: Red Scarf
              stock:
                available: 1
                committed: 0
                allocated: 1
                on_hand: 2
              price:
                retail: 345.0
                wholesale: 300.5
                buy: 500
              currency: ARS
              image_url: https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png
              dimensions:
                weight: 300.0
                heigth: 20.0
                length: 20.0
                width: 20.0
              extra_data:
                publication_id: FD742
              location: null
        404:
          description: Product with given id not found.
    put:
      description: |
        Update an existing product.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: The id of the product to be updated.
          required: true
          type: integer
        - name: product
          in: body
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        200:
          description: The updated product.
          schema:
            $ref: '#/definitions/Product'
          examples:
            application/json:
              id: 12072
              external_reference: AC17283DFC
              title: Red Scarf
              price:
                retail: 345.0
                wholesale: 300.5
                buy: 500
              currency: ARS
              image_url: https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png
              dimensions:
                weight: 300.0
                heigth: 20.0
                length: 20.0
                width: 20.0
              extra_data:
                publication_id: FD742
              location: null
  /products/{id}/merge:
    post:
      description: |
        Merges this product into a second one. This method should be used when an
        account somehow has duplicate products, and deleting is impossible due to
        existing orders.
      operationId: mergeProduct
      parameters:
        - name: id
          in: path
          description: The product that will be merged and subsequently deleted.
          required: true
          type: integer
        - name: target
          in: query
          description: Target product into which this one will be merged.
          required: true
          type: string
      responses:
        200:
          description: The resulting target product.
          schema:
            $ref: '#/definitions/Product'
          examples:
            application/json:
              results:
                - id: 12072
                  external_reference: AC17283DFC
                  title: Red Scarf
                  stock:
                    available: 1
                    committed: 0
                    allocated: 1
                    on_hand: 2
                  price:
                    retail: 345.0
                    wholesale: 300.5
                    buy: 500
                  currency: ARS
                  image_url: https://cdn.shipnow.com.ar/products/TRpXu9O7Ej.png
                  dimensions:
                    weight: 300.0
                    heigth: 20.0
                    length: 20.0
                    width: 20.0
                  extra_data:
                    publication_id: FD742
                  location: null
  /users:
    get:
      description: |
        Returns all users for the current user's account.
      operationId: findUsers
      responses:
        200:
          description: An array of User objects
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                    $ref: '#/definitions/User'
          examples:
            application/json:
              results:
                - id: 201
                  email: alice@example.com
                  token: cGwp429nYTmwdDvVtB3zFd9O7opgsz9Oq1e19dCJjfOIhOTE25
                  type: null
                  description: null
                  role: regular
                  avatar_url: https://cdn.shipnow.com.ar/avatars/201.png
    post:
      description: |
        Creates a new user for this account.

        Note that the calling user requires `admin` priviledges for this call
        to work (ie: `user.type` must be equal to `admin`)
      operationId: createUser
      responses:
        200:
          description: The newly created User.
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
              id: 202
              email: bob@example.com
              token: l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO
              type: null
              description: null
              role: regular
              avatar_url: https://cdn.shipnow.com.ar/avatars/207.png
        403:
          description: Access denied to user creation.
        422:
          description: A list of validation errors.
          examples:
            application/json:
              errors:
                email: Has already been taken
  /users/{id}/:
    get:
      description: |
        Returns a user identified by id.
      operationId: getUser
      parameters:
        - name: id
          in: path
          description: The id of the user to fetch.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A user.
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
              id: 202
              email: bob@example.com
              token: l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO
              type: null
              description: null
              role: regular
              avatar_url: https://cdn.shipnow.com.ar/avatars/207.png
        404:
          description: User with given id not found.
    put:
      description: |
        Update an existing User.

        Users of type `admin` can update all users for an account. `regular`
        users can only edit themselves.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: The id of the User to be updated.
          required: true
          type: integer
        - $ref: '#/parameters/User'
      responses:
        200:
          description: The updated User.
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
              id: 202
              email: bob@example.com
              token: l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO
              type: null
              description: null
              role: regular
              avatar_url: https://cdn.shipnow.com.ar/avatars/207.png
        403:
          description: Current User cannot modify target User.
    delete:
      description: |
        Delete a single User based on the id supplied.

        Only users of type `admin` can call this endpoint.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: The id of User to delete.
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: User deleted.
        403:
          description: Current User cannot delete target User.
  /users/authentication:
    post:
      description: |
        Authenticates a user and returns an API-compatible token.
        Implementations should provide the username and password using HTTP
        Basic Auth (as defined in RFC2617).
      operationId: authenticateUser
      security:
        - auth: []
      responses:
        200:
          description: the user object
          schema:
            $ref: '#/definitions/User'
          examples:
            application/json:
              id: 202
              email: bob@example.com
              token: l352aggWKHXAKDxnvqFbMDdS0od1BfxUKXhfIU0vDO9XiipBQO
              type: null
              description: null
              role: regular
              avatar_url: https://cdn.shipnow.com.ar/avatars/207.png
  /accounts:
    get:
      description: |
        Returns all accounts to which the user has access - this will almost
        always be just the user's account.
      operationId: findAccount
      responses:
        200:
          description: An array of Account objects
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  - $ref: '#/definitions/Account'
          examples:
            application/json:
              results:
                - id: 7
                  email: info@example.com
                  name: John
                  last_name: Doe
                  company_name: Example Company Inc
                  phone: "+54 11 1234 5678"
                  address:
                    postal_code: 2000
                    address_line: Not Fake Av 321
                    street_name: Not Fake Av
                    street_number: 321
                    unit: C
                    floor: "1"
                    city: CABA
                    state: Argentina
                  stores:
                    - id: 19
                      store_type: meli
                      name: Example Co ML
                      user_store_id: 784
  /accounts/me:
    get:
      description: |
        Returns the account to which the user has access
      operationId: getOwnAccount
      responses:
        200:
          description: An Account object
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  - $ref: '#/definitions/Account'
          examples:
            application/json:
              id: 7
              email: info@example.com
              name: John
              last_name: Doe
              company_name: Example Company Inc
              phone: "+54 11 1234 5678"
              address:
                postal_code: 2000
                address_line: Not Fake Av 321
                street_name: Not Fake Av
                street_number: 321
                unit: C
                floor: "1"
                city: CABA
                state: Argentina
              stores:
                - id: 19
                  store_type: meli
                  name: Example Co ML
                  user_store_id: 784

  /accounts/{id}:
    put:
      description: |
        Update an account.
        Only `admin`-type users can update accounts, and they can only update
        their own.
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          description: The id of the Account to be updated.
          required: true
          type: integer
        - $ref: '#/parameters/Account'
      responses:
        200:
          description: The updated Account.
          schema:
            $ref: '#/definitions/Account'
          examples:
            application/json:
              id: 7
              email: info@example.com
              name: John
              last_name: Doe
              company_name: Example Company Inc
              phone: "+54 11 1234 5678"
              address:
                postal_code: 2000
                address_line: Not Fake Av 321
                street_name: Not Fake Av
                street_number: 321
                unit: C
                floor: "1"
                city: CABA
                state: Argentina
              stores:
                - id: 19
                  store_type: meli
                  name: Example Co ML
                  user_store_id: "784"
        403:
          description: Current User cannot modify target Account.
  /stores:
    get:
      description: |
        Returns all stores for the current user's account.
      operationId: findStores
      responses:
        200:
          description: An array of Stores
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/Store'
          examples:
            application/json:
              results:
                - id: 16
                  name: Example Co ML
                  store_type: meli
                  user_store_id: "784"
                  credentials:
                    access_token: APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh
                    refresh_token: TG-lY9LMGCTnyHDcDi22Zt6Lx
                  image_url: https://cnd.shipnow.com.ar/stores/meli_generic.png
    post:
      description: |
        Creates a new Store
      operationId: createStore
      parameters:
        - $ref: '#/parameters/NewStore'
      responses:
        200:
          description: The newly created Store.
          schema:
            $ref: '#/definitions/Store'
          examples:
            application/json:
              id: 16
              name: Example Co ML
              store_type: meli
              user_store_id: "784"
              credentials:
                access_token: APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh
                refresh_token: TG-lY9LMGCTnyHDcDi22Zt6Lx
              image_url: https://cnd.shipnow.com.ar/stores/meli_generic.png
        422:
          description: A list of validation errors.
          examples:
            application/json:
              errors:
                store_type: Cannot be null
  /stores/{id}:
    get:
      description: |
        Returns the Store identified by id.
      operationId: getStore
      parameters:
        - name: id
          in: path
          description: The id of order to fetch.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A Store.
          schema:
            $ref: '#/definitions/Store'
          examples:
            application/json:
              id: 16
              name: Example Co ML
              store_type: meli
              user_store_id: "784"
              credentials:
                access_token: APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh
                refresh_token: TG-lY9LMGCTnyHDcDi22Zt6Lx
              image_url: https://cnd.shipnow.com.ar/stores/meli_generic.png
        404:
          description: A Store with the given id not found.
    put:
      description: |
        Update an existing Store.
      operationId: updateStore
      parameters:
        - name: id
          in: path
          description: The id of the Store to be updated.
          required: true
          type: integer
        - $ref: '#/parameters/Store'
      responses:
        200:
          description: The updated order.
          schema:
            $ref: '#/definitions/Store'
          examples:
            application/json:
              id: 16
              name: Example Co ML
              store_type: meli
              user_store_id: "784"
              credentials:
                access_token: APP_USR-XbAyBlrgMG1FsSTHHQ8UQtV1Varnswhh
                refresh_token: TG-lY9LMGCTnyHDcDi22Zt6Lx
              image_url: https://cnd.shipnow.com.ar/stores/meli_generic.png
  /webhooks:
    post:
      description: Create a webhook. Event notifications will be posted to it.
      operationId: createWebhook
      parameters:
        - $ref: '#/parameters/NewWebhook'
      responses:
        200:
          description: The newly created webhook
          examples:
            application/json:
              id: 71
              url: https://example.com/notifications

  /shipping_services:
    get:
      description: |
        Returns all shipping services.
      operationId: findShippingServices
      responses:
        200:
          description: An array of ShippingServices
          schema:
            type: object
            properties:
              results:
                type: array
                items:
                  $ref: '#/definitions/ShippingService'
          examples:
            application/json:
              results:
                - id: 13
                  code: motonorte_same_day
                  description: null
                  min_zip_code: null
                  max_zip_code: null
                  post_offices: []
                  carrier:
                    id: 3
                    code: motonorte
                    name: Motonorte
                    description: Envíos a CABA y GBA
  /shipping_services/{id}:
    get:
      description: |
        Returns the ShippingService identified by id.
      operationId: getShippingService
      parameters:
        - name: id
          in: path
          description: The id of ShippingService to fetch.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A ShippingService.
          schema:
            $ref: '#/definitions/ShippingService'
          examples:
            application/json:
              id: 13
              code: motonorte_same_day
              description: null
              min_zip_code: null
              max_zip_code: null
              post_offices: []
              carrier:
                id: 3
                code: motonorte
                name: Motonorte
                description: Envíos a CABA y GBA
        404:
          description: A ShippingService with the given id not found.


# TODO: tracking

  /ping:
    get:
      description:
        Use this endpoint to test connectivity to the ShipNow API, response
        times, or debug other possible network-related issues.
      operationId: ping
      security: []
      responses:
        200:
          description: This endpoint will always return the string "pong".
securityDefinitions:
  token:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    description: Used for all non-public endpoints.
  auth:
    type: "basic"
    description: Used to obtain a per-user token.
parameters:
  NewOrder:
    in: body
    name: order
    schema:
      type: object
      required:
        - external_reference
        - ship_to
        - items
      properties:
        external_reference:
          type: string
          description: A free-form text to later find this order.
        comment:
          type: string
        ship_to:
          type: object
          required:
            - name
            - last_name
            - zip_code
            - address_line
            - city
            - email
          properties:
            name:
              type: string
            last_name:
              type: string
            phone:
              type: string
            zip_code:
              type: integer
            address_line:
              type: string
            street_name:
              type: string
            street_number:
              type: string
            unit:
              type: string
            floot:
              type: string
            city:
              type: string
            state:
              type: string
            email:
              type: string
            post_office_id:
              type: string
              description: |
                The id of a post office where the order is to be shipped.
                Including this fields eliminates the need for the address_line
                and street_* fields
        shipping_options:
          type: object
          required:
            - service_code
            - carrier_code
          properties:
            service_code:
              type: string
              description: The code for the order's shipping_service.
            carrier_code:
              type: string
              description: The code for the order's carrier.
        store_id:
          type: string
          description: The id of this order's store.
        store_type:
          type: string
          description: The store_type for this order's store.
          readOnly: true
        status:
          type: string
          example: "awating_payment"
          enum:
           - awaiting_payment
           - on_hold
           - cancelled
           - awaiting_shipment
           - filtered
           - shipped
           - not_delivered
           - delivered
           - return
           - ready_to_pick
           - picking_list
           - ready_to_pack
           - ready_to_ship
        items:
          type: array
          description: The items (products) included in this order.
          items:
            - type: object
              required:
              - id
              - quantity
              properties:
                id:
                  description: The id of a product. See /products.
                  type: integer
                external_reference:
                  type: string
                  description: The product's external_reference.
                  readOnly: true
                quantity:
                  description: The amount of this product that this order contains.
                  type: integer
                unit_price:
                  description: This product's price (per unit).
                  readOnly: true
                  type: number
                title:
                  description: The product's title
                  type: string
                image_url:
                  description: Ths product's image_url.
                  type: string
        #shipments
  Product:
    in: body
    name: product
    schema:
      type: object
      required:
        - external_reference
        - title
      properties:
        external_reference:
          type: string
          description: A free-form text to later find and search this product.
        title:
          type: string
          description: A name for this product. This is free-form text, and is only used for display purposes.
        stock:
          type: number
          description: Remaining stock for this product
        price:
          type: number
          description: This product's price. Insurance coverage will be based on this price.
        currency:
          type: string
          description: The currency for this product's price. Should be ARS, for now.
        image_url:
          type: string
          format: url
          description: A URL to an image that visually identifies this product.
        dimensions:
          type: object
          properties:
            weight:
              type: number
            height:
              type: number
            length:
              type: number
            width:
              type: number
        extra_data:
          type: object
          description: A free-form JSON field where custom data can be stored for each product.
  User:
    name: user
    in: body
    schema:
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique id.
        email:
          type: string
          example: "alice@example.com"
        token:
          type: string
          example: biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH
          description: The API token.
        description:
          type: string
          description: A free-form description for this user.
        role:
          type: string
          enum:
            - regular
            - admin
            - shipnow
        # TODO: account:
        avatar_url:
          type: string
          format: url
          description: The URL to an avatar used to idenfity this user.
  Account:
    name: account
    in: body
    schema:
      properties:
        id:
          readOnly: true
          description: The unique id.
        email:
          type: string
          example: "alice@example.com"
        name:
          type: string
        last_name:
          type: string
        company_name:
          type: string
        phone:
          type: string
        address:
          type: object
          properties:
            postal_code:
              type: string
            address_line:
              type: string
            street_name:
              type: string
            street_number:
              type: string
            unit:
              type: string
            floor:
              type: string
            city:
              type: string
            state:
              type: string
        # TODO: Stores
        token:
          type: string
          example: biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH
        image_url:
          type: string
          format: url
          description: The URL to an image used to idenfity this account.
  NewStore:
    name: store
    in: body
    schema:
      properties:
        name:
          type: string
          description: A name to identify this store.
        store_type:
          type: string
          enum:
            - meli
            - magento
            - prestashop
            - woocommerce
            - shopify
            - custom
            - manual
            - tiendanube
        credentials:
          type: object
          description: |
            A free-form JSON field where credentials to upstream stores are save.
        image_url:
          type: string
          format: url
          description: The URL to an image to identify this store
          default: The image_url for the Store's store_type
  Store:
    in: body
    name: store
    schema:
      type: object
      properties:
        id:
          readOnly: true
          description: A unique id.
          example: 12
  NewWebhook:
    name: webhook
    in: body
    schema:
      required:
        - url
        - topics
        - stores
      properties:
        url:
          type: string
          format: url
          description: The URL to which notifications will be posted.
        topics:
          type: array
          enum:
            - orders/create
            - orders/update
            - products/create
            - products/update
            - products/destroy
          description: The URL to which notifications will be posted.
        stores:
          type: array
          description: List of stores that will be notified.

definitions:
  Shipment:
    required:
      - id
      - order_id
      - speed_shipping
      - speed_handling
      - estimated_handling
      - estimated_delivery
      - shipping_price
      - insurance_price
      - tracking_number
      - external_reference
      - shipped_at
      - delivered_at
      - prepared_at
      - last_mile_at
      - not_delivered_at
      - carrier_code
      - service_code
      - type
    properties:
      id:
        type: integer
      order_id:
        type: integer
      speed_shipping:
        type: string
      speed_handling:
        type: string
      estimated_handling:
        type: string
        format: date-time
      estimated_delivery:
        type: string
        format: date-time
      shipping_price:
        type: number
      insurance_price:
        type: number
      tracking_number:
        type: string
      external_reference:
        type: string
      shipped_at:
        type: string
        format: date-time
      delivered_at:
        type: string
        format: date-time
      prepared_at:
        type: string
        format: date-time
      last_mile_at:
        type: string
        format: date-time
      not_delivered_at:
        type: string
        format: date-time
      carrier_code:
        type: string
      service_code:
        type: string
      type:
        type: string
        enum:
          - PAS
          - PAP
  Order:
    required:
      - id
      - external_reference
      - ship_to
      # - ship_from
      # - shipping_option
      - store_id
      - items
      # - shipment
    properties:
      store_type:
        type: string
        description: The store_type for this order's store.
        readOnly: true
      id:
        readOnly: true
        type: integer
      external_reference:
        type: string
        description: A free-form text to later find and search this order.
      comment:
        type: string
      ship_to:
        type: object
        required:
          - name
          - last_name
          - zip_code
          - address_line
          - city
          - email
        properties:
          name:
            type: string
          last_name:
            type: string
          phone:
            type: string
          zip_code:
            type: integer
          address_line:
            type: string
          street_name:
            type: string
          street_number:
            type: string
          unit:
            type: string
          floot:
            type: string
          city:
            type: string
          state:
            type: string
          email:
            type: string
      shipping_options:
        type: object
        required:
          - service_code
          - carrier_code
        properties:
          service_code:
            type: string
          carrier_code:
            type: string
      store_id:
        type: string
        description: The id of this order's store.
      status:
        type: string
        example: "awating_payment"
        enum:
         - awaiting_payment
         - on_hold
         - cancelled
         - awaiting_shipment
         - filtered
         - shipped
         - not_delivered
         - delivered
         - return
         - ready_to_pick
         - picking_list
         - ready_to_pack
         - ready_to_ship
      items:
        type: array
        description: The items (products) included in this order.
        items:
          - type: object
            required:
            - id
            - quantity
            properties:
              id:
                description: The id of a product. See /products.
                type: integer
              external_reference:
                type: string
                description: The product's external_reference.
                readOnly: true
              quantity:
                description: The amount of this product that this order contains.
                type: integer
              unit_price:
                description: This product's price (per unit).
                readOnly: true
                type: number
              title:
                description: The product's title
                type: string
              image_url:
                description: Ths product's image_url.
                type: string
  Product:
    required:
      - id
      - external_reference
      - title
      - stock
      - price
      - currency
      - image_url
      - dimensions
      - extra_data
    properties:
      id:
        readOnly: true
        type: integer
      external_reference:
        type: string
        description: A free-form text to later find and search this product.
      title:
        type: string
        description: A name for this product. This is free-form text, and is only used for display purposes.
      stock:
        type: number
        description: Remaining stock for this product
      price:
        type: number
        description: This product's price. Insurance coverage will be based on this price.
      currency:
        type: string
        description: The currency for this product's price. Should be ARS, for now.
      image_url:
        type: string
        format: url
        description: A URL to an image that visually identifies this product.
      dimensions:
        type: object
        properties:
          weight:
            type: number
          height:
            type: number
          length:
            type: number
          width:
            type: number
      extra_data:
        type: object
        description: A free-form JSON field where custom data can be stored for each product.
  User:
    required:
      - email
    properties:
      id:
        readOnly: true
        description: The unique id.
      email:
        type: string
        example: "alice@example.com"
      token:
        type: string
        example: biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH
        description: The API token.
      description:
        type: string
        description: A free-form description for this user.
      role:
        type: string
        enum:
          - regular
          - admin
          - shipnow
      # TODO: account:
      avatar_url:
        type: string
        format: url
        description: The URL to an avatar used to idenfity this user.
  Account:
    properties:
      id:
        readOnly: true
        description: The unique id.
      email:
        type: string
        example: "alice@example.com"
      name:
        type: string
      last_name:
        type: string
      company_name:
        type: string
      phone:
        type: string
      address:
        type: object
        properties:
          postal_code:
            type: string
          address_line:
            type: string
          street_name:
            type: string
          street_number:
            type: string
          unit:
            type: string
          floor:
            type: string
          city:
            type: string
          state:
            type: string
      # TODO: Stores
      token:
        type: string
        example: biijDg4Jo0S0P3vdGmTLICUnOExFFqJzLJ5QSTzRfLTYvVZgjH
      image_url:
        type: string
        format: url
        description: The URL to an image used to idenfity this account.
  Store:
    properties:
      name:
        type: string
        description: A name to identify this store.
      store_type:
        type: string
        enum:
          - meli
          - magento
          - prestashop
          - woocommerce
          - shopify
          - custom
          - manual
          - tiendanube
      credentials:
        type: object
        description: |
          A free-form JSON field where credentials to upstream stores are save.
      image_url:
        type: string
        format: url
        description: The URL to an image to identify this store
        default: The image_url for the Store's store_type
  ShippingService:
    properties:
      id:
        description: A unique id.
        example: 1
        type: integer
      code:
        description: |
          A unique code for this shipping service. It should be more
          readable than the id, and will usually be returned when referencing
          shipping services.
        type: string
        example: motonorte
      min_zip_code:
        description: |
          Indicates that this shipping service only operates in areas with
          zipcode greater than this value.
        type: integer
        example: 1000
      max_zip_code:
        description: |
          Indicates that this shipping service only operates in areas with
          zipcode less than this value.
        type: integer
        example: 9999
      carrier:
        type: object
        description: Information about the carrier that provides this shipping service.
        properties:
          id:
            description: The carrier's unique id.
            type: integer
            example: 1
          code:
            description: |
              A unique code for this carrier. It should be more readable than
              the id, and will usually be returned when referencing carrier.
            type: string
            example: ups
          name:
            description: A friendly name for this carrier.
            type: string
            example: UPS
          description:
            description: |
              A free-form text field that give some information about this
              shipping carrier.
            type: string
            example: Does worldwide door-to-door shipping